openapi: 3.0.0
info:
  title: S&G Mercator Resource APIs
  version: 1.0.0
  description: API documentation for S&G Mercator resource management.
servers:
  - url: 'http://localhost:5000/api'
    description: Development server

paths:
  /line-functions:
    get:
      summary: Retrieve a list of all line functions
      description: Retrieve a list of all line functions.
      tags:
        - Line Functions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          description: The page number to retrieve.
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: The number of records per page.
      responses:
        200:
          description: A list of line functions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineFunctionsResponse'
        400:
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /stages:
    get:
      summary: Retrieve a list of all stages
      description: Retrieve a list of all stages.
      tags:
        - Stages
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          description: The page number to retrieve.
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: The number of records per page.
      responses:
        200:
          description: A list of stages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StagesResponse'
        400:
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /therapeutic-areas:
    get:
      summary: Retrieve a list of all therapeutic areas
      description: Retrieve a list of all therapeutic areas. Supports filtering by userId to get associated therapeutic areas.
      tags:
        - Therapeutic Areas
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          description: The page number to retrieve.
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: The number of records per page.
        - in: query
          name: userId
          schema:
            type: integer
            example: 2
          description: ID of the user to filter associated therapeutic areas.
      responses:
        200:
          description: A list of therapeutic areas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TherapeuticAreasResponse'
        400:
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /therapeutic-areas/assign:
    post:
      summary: Assign therapeutic areas to a deal lead
      description: Assign multiple therapeutic areas to a deal lead. Only a system admin can perform this operation.
      tags:
        - Therapeutic Areas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignTherapeuticAreaRequest'
      responses:
        200:
          description: Therapeutic areas assigned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Therapeutic Areas assigned successfully.'
        400:
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /deals/create:
    post:
      summary: Create a new deal
      description: Create a new deal with optional Deal Lead association. If Deal Lead is provided, it will be validated against the Therapeutic Area.
      tags:
        - Deals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDealRequest'
      responses:
        200:
          description: Deal created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Deal created successfully.'
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /deals/{dealId}:
    get:
      summary: Get details of a specific deal
      description: Fetch detailed information of a deal, including stage, therapeutic area, and deal leads.
      tags:
        - Deals
      parameters:
        - in: path
          name: dealId
          required: true
          schema:
            type: integer
          description: The ID of the deal to retrieve.
      responses:
        200:
          description: Successful response with deal details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealDetailResponse'
        404:
          description: Deal not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /deals/{id}:
    put:
      summary: Update an existing deal
      description: Updates a deal. The deal `id` is not editable, but all other fields are.
      tags:
        - Deals
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the deal to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDealRequest'
      responses:
        200:
          description: Deal updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Deal updated successfully.'
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Deal Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a deal
      description: Deletes a deal by its ID. Only the deal lead who created the deal or a system admin can delete the deal.
      tags:
        - Deals
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the deal to be deleted.
      responses:
        200:
          description: Deal successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Deal successfully deleted.'
        403:
          description: User is not authorized to delete the deal.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Deal not found or already deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /deals/list:
    post:
      summary: Get a list of deals
      description: Retrieve a list of deals based on various filters. This endpoint supports pagination and filters, including therapeutic area, stage, and deal lead information. Only system admins can view all deals, while deal leads are restricted to their assigned therapeutic areas.
      tags:
        - Deals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                  description: The ID of the user requesting the list. This determines access rights.
                filters:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 'deal'
                      description: Filter deals by name.
                    therapeuticArea:
                      type: array
                      items:
                        type: integer
                      example: [1, 2, 3]
                      description: Filter by therapeutic area IDs.
                    stage:
                      type: array
                      items:
                        type: integer
                      example: [1, 2, 3, 4, 5, 6, 7]
                      description: Filter by stage IDs.
                    createdBy:
                      type: string
                      example: 'Shubhdeep'
                      description: Search by creator's first or last name.
                    modifiedBy:
                      type: string
                      example: 'Hatakesam'
                      description: Search by modifier's first or last name.
                    createdAt:
                      type: string
                      format: date
                      example: '2024-09-24'
                      description: Filter by creation date.
                    modifiedAt:
                      type: string
                      format: date
                      example: '2024-09-24'
                      description: Filter by modification date.
                    dealLead:
                      type: string
                      example: 'shubhdeep'
                      description: Search by deal lead's first or last name.
                page:
                  type: integer
                  example: 1
                  description: Page number.
                limit:
                  type: integer
                  example: 10
                  description: Number of records per page.
      responses:
        200:
          description: Successful response with deal list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealsListResponse'
        400:
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /search-person:
    get:
      summary: Search for a person by email
      description: Retrieve details of a person based on their email address.
      tags:
        - Users
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: The email of the person to search.
      responses:
        200:
          description: Person details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        404:
          description: Person not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /resources/add:
    post:
      summary: Add resources to a deal
      description: Add one or more resources to a deal with stages and line function. Supports adding multiple resources in a single request.
      tags:
        - Resources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddResourceRequest'
      responses:
        201:
          description: Resource(s) added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Resources added successfully'
        400:
          description: Validation failed or bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /resources/list:
    post:
      summary: Retrieve a list of resources for a particular deal
      description: Retrieve a list of resources mapped to a deal. Supports filtering by multiple criteria, including line function, stage, and resource attributes.
      tags:
        - Resources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceListRequest'
      responses:
        200:
          description: A list of resources with pagination metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesListResponse'
        400:
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /resources/{resourceId}/stages/{stageId}/deals/{dealId}:
    delete:
      tags:
        - Resources
      summary: Soft delete a resource from a stage of a deal
      description: Soft delete a resource from a specific stage of a deal. Deal leads can only delete resources from their own deals, while system admins have full access.
      parameters:
        - in: path
          name: resourceId
          required: true
          schema:
            type: string
          description: The ID of the resource to delete
        - in: path
          name: stageId
          required: true
          schema:
            type: string
          description: The ID of the stage from which the resource is being deleted
        - in: path
          name: dealId
          required: true
          schema:
            type: string
          description: The ID of the deal associated with the resource
        - in: query
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user performing the deletion
      responses:
        '200':
          description: Resource soft deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Resource deleted successfully

          '400':
          description: Bad request - Resource not found or invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - User is not authorized to delete the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Deal, resource, or stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /resources/detail:
    get:
      summary: Get details of a specific resource for a deal
      description: Fetch detailed information about a resource, including their line function, stage, and deal association. Requires userId, resourceId, and dealId as query parameters.
      tags:
        - Resources
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the user sending the request.
        - in: query
          name: resourceId
          required: true
          schema:
            type: integer
            example: 2
          description: The ID of the resource to retrieve.
        - in: query
          name: dealId
          required: true
          schema:
            type: integer
            example: 3
          description: The ID of the deal associated with the resource.
        - in: query
          name: stageId
          required: true
          schema:
            type: integer
            example: 3
          description: The ID of the stage associated with the deal of resource.
      responses:
        200:
          description: Successful response with resource details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetailResponse'
        400:
          description: Bad Request - Missing or invalid query parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Resource or Deal not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    LineFunction:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: The unique identifier of the line function.
        name:
          type: string
          example: 'Alliance Management'
          description: The name of the line function.

    LineFunctionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LineFunction'
        totalRecords:
          type: integer
          example: 1
          description: Total number of records available
        currentPage:
          type: integer
          example: 1
          description: Current page number
        totalPages:
          type: integer
          example: 1
          description: Total number of pages
        pageSize:
          type: integer
          example: 10
          description: Number of records per page

    StagesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Stage'
        totalRecords:
          type: integer
          example: 1
          description: Total number of records available
        currentPage:
          type: integer
          example: 1
          description: Current page number
        totalPages:
          type: integer
          example: 1
          description: Total number of pages
        pageSize:
          type: integer
          example: 10
          description: Number of records per page

    Stage:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: The unique identifier of the stage.
        name:
          type: string
          example: 'Triage'
          description: The name of the stage.

    TherapeuticAreasResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TherapeuticArea'
        totalRecords:
          type: integer
          example: 1
          description: Total number of records available
        currentPage:
          type: integer
          example: 1
          description: Current page number
        totalPages:
          type: integer
          example: 1
          description: Total number of pages
        pageSize:
          type: integer
          example: 10
          description: Number of records per page

    TherapeuticArea:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Unique identifier of the therapeutic area.
        name:
          type: string
          example: 'CRM'
          description: Name of the therapeutic area.

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Oops! Invalid request, please recheck information!'
          description: Error message detailing what went wrong.

    AssignTherapeuticAreaRequest:
      type: object
      required:
        - adminUserId
        - dealLeadId
        - therapeuticAreaIds
      properties:
        adminUserId:
          type: integer
          description: ID of the admin user performing the assignment.
          example: 1
        dealLeadId:
          type: integer
          description: ID of the deal lead to assign the therapeutic areas.
          example: 2
        therapeuticAreaIds:
          type: array
          description: List of therapeutic area IDs to be assigned.
          items:
            type: integer
          example: [1, 2, 3]

    CreateDealRequest:
      type: object
      required:
        - name
        - stage
        - therapeuticArea
        - userId
      properties:
        name:
          type: string
          description: The name of the deal.
          example: 'New Deal'
        stage:
          type: integer
          description: The ID of the stage.
          example: 1
        therapeuticArea:
          type: integer
          description: The ID of the therapeutic area.
          example: 7
        userId:
          type: integer
          description: The ID of the user creating the deal.
          example: 1
        dealLead:
          type: integer
          description: (Optional) The ID of the deal lead.
          example: 2

    UpdateDealRequest:
      type: object
      required:
        - name
        - stage
        - therapeuticArea
        - userId
      properties:
        name:
          type: string
          description: The name of the deal to update.
          example: 'Updated Deal Name'
        stage:
          type: integer
          description: The ID of the stage.
          example: 1
        therapeuticArea:
          type: integer
          description: The ID of the therapeutic area.
          example: 7
        userId:
          type: integer
          description: The ID of the user updating the deal.
          example: 1
        dealLead:
          type: integer
          description: (Optional) The ID of the deal lead.
          example: 2

    DealDetailResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              example: 'test deal2'
            stage:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: 'Triage'
            therapeuticArea:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: 'CRM'
            dealLeads:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                    example: 'deal2.lead@example.com'
                  novartis521ID:
                    type: string
                    example: 'deal@novartis.neta'
                  firstName:
                    type: string
                    example: 'DealLeadFirstname2'
                  lastName:
                    type: string
                    example: 'DealLeadLastName2'
                  title:
                    type: string
                    example: 'Deal Leader'

    DealsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Deal'
        totalRecords:
          type: integer
          example: 1
          description: Total number of records available
        currentPage:
          type: integer
          example: 1
          description: Current page number
        totalPages:
          type: integer
          example: 1
          description: Total number of pages
        pageSize:
          type: integer
          example: 10
          description: Number of records per page

    Deal:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Unique identifier of the deal.
        name:
          type: string
          example: 'BOSTON'
          description: Name of the deal.
        therapeuticArea:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: 'CRM'
        stage:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: 'Triage'
        modifiedBy:
          type: object
          nullable: true
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: 'Hatakesam Goru'
        modifiedAt:
          type: string
          format: date-time
          example: '2024-09-25T19:49:36.376Z'
        dealLeads:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 3
              name:
                type: string
                example: 'Shubhdeep Verma'

    PersonResponse:
      type: object
      properties:
        id:
          type: integer
          example: 3
          description: The unique identifier of the person.
        email:
          type: string
          example: 'shubhdeep.lead@example.com'
          description: The email of the person.
        title:
          type: string
          example: 'Software Engineer'
          description: The title of the person.
        firstName:
          type: string
          example: 'Shubhdeep'
          description: The first name of the person.
        lastName:
          type: string
          example: 'Verma'
          description: The last name of the person.
        novartis521ID:
          type: string
          example: 'shubhdeep@novartis.neta'
          description: The Novartis ID of the person.
        therapeuticAreas:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: 'CRM'

    AddResourceRequest:
      type: object
      required:
        - userId
        - dealId
        - resources
      properties:
        dealId:
          type: integer
          example: 1
          description: The ID of the deal to which resources will be added.
        userId:
          type: integer
          example: 5
          description: The ID of the user adding the resource(s).
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceItem'

    ResourceItem:
      type: object
      required:
        - email
        - lineFunction
        - stages
        - vdrAccessRequested
        - webTrainingStatus
        - isCoreTeamMember
      properties:
        email:
          type: string
          example: john.doe@example.com
          description: Email of the resource.
        lineFunction:
          type: integer
          example: 101
          description: The line function ID of the resource.
        stages:
          type: array
          items:
            type: integer
            example: 1
          description: Array of stage IDs.
        vdrAccessRequested:
          type: boolean
          example: true
          description: Specifies whether VDR access is requested.
        webTrainingStatus:
          type: string
          enum: [Not Started, In-progress, completed]
          example: In-progress
          description: The web training status of the resource.
        oneToOneDiscussion:
          type: string
          example: 'Discussion notes here.'
          description: Optional notes from a one-to-one discussion.
        optionalColumn:
          type: string
          example: 'Additional information goes here.'
          description: Optional information (optional).
        isCoreTeamMember:
          type: boolean
          example: true
          description: Specifies whether the resource is a core team member.

    ResourceListRequest:
      type: object
      required:
        - userId
        - dealId
      properties:
        userId:
          type: integer
          example: 1
          description: The ID of the user requesting the resource list.
        dealId:
          type: integer
          example: 2
          description: The ID of the deal for which resources are listed.
        filters:
          type: object
          description: Optional filters for the resource list.
          properties:
            lineFunction:
              type: array
              items:
                type: integer
              example: [1, 2, 3]
              description: Filter resources by line function IDs.
            stage:
              type: array
              items:
                type: integer
              example: [1, 2, 3]
              description: Filter resources by stage IDs.
            name:
              type: string
              example: 'John Doe'
              description: Search by resource's first and last name.
            title:
              type: string
              example: 'Software Engineer'
              description: Filter resources by title.
            email:
              type: string
              example: 'john.doe@example.com'
              description: Filter resources by email.
            vdrAccessRequested:
              type: boolean
              example: true
              description: Filter resources by VDR access request status.
            webTrainingStatus:
              type: array
              items:
                type: string
                enum: [Not Started, In-progress, completed]
              example: ['In-progress', 'completed']
              description: Filter resources by web training status.
            novartis521ID:
              type: string
              example: 'novartis123'
              description: Filter resources by Novartis ID.
            isCoreTeamMember:
              type: boolean
              example: true
              description: Filter resources by core team membership status.
            oneToOneDiscussion:
              type: string
              example: 'Notes from discussion.'
              description: Filter resources by notes from one-to-one discussions.
            optionalColumn:
              type: string
              example: 'Additional notes.'
              description: Filter resources by optional column data.
            siteCode:
              type: string
              example: 'site123'
              description: Filter resources by site code.
        page:
          type: integer
          example: 1
          description: Page number for pagination.
        limit:
          type: integer
          example: 10
          description: Number of records per page for pagination.
      additionalProperties: false

    ResourcesListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ResourceDetail'
        totalRecords:
          type: integer
          example: 30
          description: Total number of resource records.
        currentPage:
          type: integer
          example: 1
          description: Current page number.
        totalPages:
          type: integer
          example: 3
          description: Total number of pages.
        pageSize:
          type: integer
          example: 10
          description: Number of records per page.

    ResourceDetail:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Resource ID.
        lineFunction:
          type: object
          properties:
            id:
              type: integer
              example: 1
              description: Line function ID.
            name:
              type: string
              example: 'S&E'
              description: Name of the line function.
        name:
          type: string
          example: 'John Doe'
          description: Full name of the resource (first name + last name).
        stage:
          type: object
          properties:
            id:
              type: integer
              example: 1
              description: Stage ID.
            name:
              type: string
              example: 'Triage'
              description: Stage name.
        title:
          type: string
          example: 'Software Engineer'
          description: Resource's title.
        email:
          type: string
          example: 'john.doe@example.com'
          description: Resource's email address.
        vdrAccessRequested:
          type: boolean
          example: true
          description: VDR access request status.
        webTrainingStatus:
          type: string
          enum: [Not Started, In-progress, completed]
          example: 'In-progress'
          description: Web training status of the resource.
        novartis521ID:
          type: string
          example: 'novartis123'
          description: Resource's Novartis ID.
        isCoreTeamMember:
          type: boolean
          example: true
          description: Indicates whether the resource is a core team member.
        oneToOneDiscussion:
          type: string
          example: 'Discussion notes.'
          description: Notes from one-to-one discussion.
        optionalColumn:
          type: string
          example: 'Optional information.'
          description: Additional optional information.
        siteCode:
          type: string
          example: 'site123'
          description: Site code of the resource.

    ResourceDetailResponse:
      type: object
      properties:
        id:
          type: integer
          example: 2
          description: Resource ID.
        firstName:
          type: string
          example: 'John'
          description: Resource's first name.
        lastName:
          type: string
          example: 'Doe'
          description: Resource's last name.
        title:
          type: string
          example: 'Software Engineer'
          description: Resource's title.
        email:
          type: string
          example: 'john.doe@example.com'
          description: Resource's email address.
        novartis521ID:
          type: string
          example: 'novartis123'
          description: Resource's Novartis ID.
        siteCode:
          type: string
          example: 'site123'
          description: Site code of the resource.
        vdrAccessRequested:
          type: boolean
          example: true
          description: Whether VDR access is requested for this resource.
        webTrainingStatus:
          type: string
          enum: [Not Started, In-progress, Completed]
          example: 'In-progress'
          description: The web training status of the resource.
        oneToOneDiscussion:
          type: string
          example: 'Discussion notes'
          description: Notes from one-to-one discussion with the resource.
        optionalColumn:
          type: string
          example: 'Additional information'
          description: Optional column with additional details.
        isCoreTeamMember:
          type: boolean
          example: true
          description: Whether the resource is a core team member.
        lineFunction:
          type: object
          properties:
            id:
              type: integer
              example: 101
              description: Line function ID.
            name:
              type: string
              example: 'Alliance Management'
              description: Name of the line function.
        stage:
          type: object
          properties:
            id:
              type: integer
              example: 1
              description: Stage ID.
            name:
              type: string
              example: 'Triage'
              description: Stage name.
